package fi.uaemex.ens;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileFilter;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * UNIVERSIDAD AUTÓNOMA DEL ESTADO DE MÉXICO
 * FACULTAD DE INGENIERÍA 
 * Proyecto Ensambladores 2017-B 
 * v 1.0
 *
 * 
 * @author Alfredo Abner González Mercado
 */
public class LeeArchivo extends javax.swing.JFrame {

    ArrayList<String> secuencias = new ArrayList<String>();
    ArrayList<String> tokens = new ArrayList<String>();
    ArrayList<String> llaves = new ArrayList<String>();
    boolean errorLex = false, anaLex =false;
    boolean hex = false;
    boolean bin = false;
    boolean punto = false;
    char[] hexa = {'A','B','C','D','E','F' };
    
    public String archivo = "";

    public JTextArea getTextarea() {
        return textarea;
    }

    public void setTextarea(JTextArea textarea) {
        this.textarea = textarea;
    }

    /**
     * Creates new form LeeArchivo
     */
    public LeeArchivo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        btn_analiza = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btn_analizaLex = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("");
        fileChooser.setFileFilter(new MyCustomFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Archivo original");

        textarea.setEditable(false);
        textarea.setColumns(20);
        textarea.setRows(5);
        textarea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        textarea.setEnabled(false);
        jScrollPane2.setViewportView(textarea);

        btn_analiza.setText("Separar");
        btn_analiza.setEnabled(false);
        btn_analiza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analizaActionPerformed(evt);
            }
        });

        textarea2.setEditable(false);
        textarea2.setColumns(20);
        textarea2.setRows(5);
        textarea2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        textarea2.setEnabled(false);
        jScrollPane3.setViewportView(textarea2);

        jLabel2.setText("Elementos separados del archivo");

        btn_analizaLex.setText("Analizar ");
        btn_analizaLex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analizaLexActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        Open.setText("Abrir archivo...");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        jMenu1.add(Open);

        Exit.setText("Salir");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");

        about.setText("Acerca de...");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        jMenu2.add(about);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_analiza)
                            .addComponent(btn_analizaLex))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btn_analiza)
                        .addGap(18, 18, 18)
                        .addComponent(btn_analizaLex)))
                .addGap(54, 54, 54))
        );

        btn_analizaLex.setEnabled(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed

        textarea2.setText(""); // Limpia textarea
        textarea.setText(""); // Limpia textarea
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                // Muestra el archivo fuente .asm en textarea1 (Archivo original)
                if (textarea.getText() != "") {
                    btn_analiza.setEnabled(true);
                    textarea.setEnabled(true);
                }
                textarea.read(new FileReader(file.getAbsolutePath()), null);
                archivo = file.getAbsolutePath(); // Obtiene la ruta completa del archivo, auxiliar
                //JOptionPane.showMessageDialog(null, "Ruta: "+archivo);
            } catch (IOException ex) {
                System.out.println("Problema al accesar al archivo: " + file.getAbsolutePath());
            }
        } else {
            System.out.println("Acceso al archivo cancelado por el usuario");
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void btn_analizaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analizaActionPerformed
        textarea2.setEnabled(true);
        textarea2.setText("");
        
        btn_analizaLex.setEnabled(true);
        
        String cadena, cad_aux = null;
        String sep = "\n,: "; // Separadores
        try {
            FileReader f = new FileReader(archivo); // Auxiliar 
            BufferedReader b = new BufferedReader(f); // Auxiliar
            
            while((cadena=b.readLine())!=null){
            if(!cadena.isEmpty()){
                cadena = cadena.trim();
                if(!cadena.startsWith(";")){ // Ignora los comentarios con estilo \t; (t=4espacios)
                    if(cadena.contains(";")){
                        int i = 0;
                        int j = 0;
                        i = cadena.indexOf(";");
                        cadena = cadena.substring(0,i);
                        cadena = cadena.trim();
                        
                        StringTokenizer st_a = new StringTokenizer(cadena,sep);
                        if(cadena.contains("code segment") || cadena.contains("data segment") || cadena.contains("stack segment")){
                            textarea2.append(cadena+"\n");
                        }
                    }
                    
                        StringTokenizer st = new StringTokenizer(cadena,sep); // Divide acorde a los separadores
                        if(cadena.contains("code segment") || cadena.contains("data segment") || cadena.contains("stack segment")){
                            textarea2.append(cadena+"\n");
                        }else if(cadena.contains("\"")){
                            String aux = null;
                            int i = 0;
                            i = cadena.indexOf("\"");
                            aux = cadena.substring(0,i);
                            StringTokenizer st_a = new StringTokenizer(aux,sep);
                            textarea2.append(st_a.nextToken().toString()+"\n");
                            textarea2.append(st_a.nextToken().toString()+"\n");
                            
                            cadena = cadena.substring(i,cadena.length());
                                 textarea2.append(cadena+"\n");
                        }else{
                            while(st.hasMoreTokens()){
                                textarea2.append(st.nextToken().toString()+"\n");// Muestra la cadena en textarea2
                            }
                        }
                    }
            }
                
        }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LeeArchivo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LeeArchivo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_analizaActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Proyecto realizado por: \n"
                + "Alfredo Abner González Mercado");
    }//GEN-LAST:event_aboutActionPerformed

    private void btn_analizaLexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analizaLexActionPerformed
        // TODO add your handling code here:
        
        btn_analizaLex.setEnabled(false);
        String cod = textarea2.getText();
        int longitud = cod.length();
        char arreglo[] = new char[longitud];
        arreglo = cod.toCharArray();
        secuencias.clear();
        tokens.clear();
        textarea2.setText("");
        lexer(cod);   
    }//GEN-LAST:event_btn_analizaLexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeeArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeeArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeeArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeeArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeeArchivo().setVisible(true);
            }
        });
    }
    
    public void lexer(String cod){
    	String lex = cod.trim();
    	String cadena = null;
    	char c;
    	
    	int i = 0;
    	
    	StringTokenizer lx = new StringTokenizer(lex,"\n");
    	textarea2.append("Motrando elementos: \n");
    	while(lx.hasMoreTokens()) { 
    		hex = false;
        	bin = false;
        	punto = false;
        	
    		cadena = lx.nextToken().toString();
    		
    		if(esPseudoIns(cadena)) {
    			textarea2.append(cadena + "\t<-- Pseudoinstrucción\n");
    		}else if(esRegistro(cadena)) {
    			textarea2.append(cadena + "\t<-- Registro\n");
    		}else if(esConjIns(cadena)) {
    			textarea2.append(cadena + "\t<-- Instrucción\n");
    		}else {
    			if(cadena.length()>10) {
    				if(cadena.startsWith("\"")) {
    					textarea2.append(cadena + "\t<-- Constante (Comilla Doble)\n");
    				}else if(cadena.startsWith("\'")) {
    					textarea2.append(cadena + "\t<-- Constante (Comilla Simple)\n");
    				}else {
    					textarea2.append(cadena+"\t<-- Inválido\n");
    				}
    			}else {
    				if(cadena.startsWith("\"")) {
    					textarea2.append(cadena + "\t<-- Constante (Comilla Doble)\n");
    				}else if(cadena.startsWith("\'")) {
    					textarea2.append(cadena + "\t<-- Constante (Comilla Simple)\n");
    				}else {
    					if(esNumero(cadena)) {
    						//tipoNumero(cadena);
    						if(tipoNumero(cadena).endsWith("h") || tipoNumero(cadena).endsWith("H")) {
    							textarea2.append(tipoNumero(cadena) + "\t<-- Hexadecimal\n");
    						}else if(tipoNumero(cadena).endsWith("b") || tipoNumero(cadena).endsWith("H")) {
    							textarea2.append(tipoNumero(cadena) + "\t<-- Binario\n");
    						}else {
    							textarea2.append(tipoNumero(cadena) + "\t<-- Número\n");
    						}
    					}else {
    						textarea2.append(cadena +  "\t<-- Símbolo\n");
    					}
    				}
    			}
    		}
    		
    		
    		//textarea2.append(cadena+"\n");
    	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    protected javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem about;
    private javax.swing.JButton btn_analiza;
    private javax.swing.JButton btn_analizaLex;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextArea textarea2;
    // End of variables declaration//GEN-END:variables

    private static class MyCustomFilter extends FileFilter {

        public MyCustomFilter() { // Filtro para archivos
        }

        @Override
        public boolean accept(File f) {
            // Apertura exclusiva de archivos .asm
            return f.isDirectory() || f.getAbsolutePath().endsWith(".asm");
        }

        @Override
        public String getDescription() {
            return "Archivo (*.asm)";
        }
    }

    public void analizaArch() throws FileNotFoundException, IOException {
        JOptionPane.showMessageDialog(null, "El archivo analizado está en : " + archivo);
        Archivo a = new Archivo();
        a.Arch(archivo);
    }
    
    public static boolean esNumero(String cad) {
    	int i = 0;
    	String num = null;
    	char t = cad.charAt(i);
    	if(Character.isDigit(t)) {
    		return true;
    	}
    	return false;
    }
    
    public String tipoNumero(String cadena) {
    	String num = null;
    	int i = 0;
    	
    	return cadena;
    }
    
    public static boolean esPseudoIns(String cad){
        if(cad.equalsIgnoreCase("data segment")){
            return true;
        }else if (cad.equalsIgnoreCase("stack segment")){
            return true;
        }else if (cad.equalsIgnoreCase("code segment")){
            return true;
        }else if (cad.equalsIgnoreCase("ends")){
            return true;
        }else if (cad.equalsIgnoreCase("db")){
            return true;
        }else if (cad.equalsIgnoreCase("dw")){
            return true;
        }else if (cad.equalsIgnoreCase("equ")){
            return true;
        }else if (cad.contains("dup")){
            return true;
        }else if (cad.equalsIgnoreCase("byte ptr")){
            return true;
        }else if (cad.equalsIgnoreCase("word ptr")){
            return true;
        }else if (cad.equalsIgnoreCase("macro")){
            return true;
        }else if (cad.equalsIgnoreCase("endm")){
            return true;
        }else if (cad.equalsIgnoreCase("proc")){
            return true;
        }else if (cad.equalsIgnoreCase("endp")){
            return true;
        }else if (cad.equalsIgnoreCase("byte")){
            return true;
        }else if (cad.equalsIgnoreCase("word")){
            return true;
        }else{
            return false;
        }
    }
    
    public static boolean esRegistro(String cad){
        if(cad.equalsIgnoreCase("ax")){
            return true;
        }else if(cad.equalsIgnoreCase("bx")){
            return true;
        }else if(cad.equalsIgnoreCase("cx")){
            return true;
        }else if(cad.equalsIgnoreCase("dx")){
            return true;
        }else if(cad.equalsIgnoreCase("si")){
            return true;
        }else if(cad.equalsIgnoreCase("di")){
            return true;
        }else if(cad.equalsIgnoreCase("sp")){
            return true;
        }else if(cad.equalsIgnoreCase("bp")){
            return true;
        }else if(cad.equalsIgnoreCase("ss")){
            return true;
        }else if(cad.equalsIgnoreCase("cs")){
            return true;
        }else if(cad.equalsIgnoreCase("ds")){
            return true;
        }else if(cad.equalsIgnoreCase("es")){
            return true;
        }else{
            return false;
        }
    }
    
    public static boolean esConjIns(String cad){
        if(cad.equalsIgnoreCase("AAM")){
            return true;
        }else if(cad.equalsIgnoreCase("DAA")){
            return true;
        }else if(cad.equalsIgnoreCase("MOVSB")){
            return true;
        }else if(cad.equalsIgnoreCase("SCASW")){
            return true;
        }else if(cad.equalsIgnoreCase("IMUL")){
            return true;
        }else if(cad.equalsIgnoreCase("NEG")){
            return true;
        }else if(cad.equalsIgnoreCase("ADD")){
            return true;
        }else if(cad.equalsIgnoreCase("SUB")){
            return true;
        }else if(cad.equalsIgnoreCase("JB")){
            return true;
        }else if(cad.equalsIgnoreCase("JLE")){
            return true;
        }else if(cad.equalsIgnoreCase("JNL")){
            return true;
        }else if(cad.equalsIgnoreCase("JS")){
            return true;
        }else{
            return false;
        }
    }
}
